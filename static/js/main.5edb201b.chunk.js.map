{"version":3,"sources":["app/components/nav.js","app/components/Header.jsx","components/SocialNetwork.jsx","app/components/Footer.jsx","about/About.jsx","home/Home.jsx","app/components/index.js","app/components/AppContent.jsx","app/App.jsx","serviceWorker.js","index.js"],"names":["nav","text","link","Header","react_default","a","createElement","Navbar","color","dark","expand","className","Link","to","alt","src","width","height","Nav","navbar","Links","map","item","i","key","Component","SocialNetwork","state","tooltipOpen","toggle","_this","setState","href","this","props","target","rel","index_es","id","icon","size","Tooltip","placement","isOpen","Footer","Networks","_this2","length","request","XMLHttpRequest","open","addEventListener","readyState","status","JSON","parse","responseText","send","year","Date","getFullYear","src_components_SocialNetwork","About","Home","style","fontSize","dist","lineColor","backgroundColor","collapsible","createdAt","title","titleStyle","padding","subtitle","subtitleStyle","iconColor","bubbleStyle","contentStyle","components","AppContent","Switch","Route","exact","path","component","App","Fragment","Boolean","window","location","hostname","match","library","add","fab","ReactDOM","render","BrowserRouter","src_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5edb201b.chunk.js","sourcesContent":["export default [\r\n  {\r\n    \"text\" : \"About me\",\r\n    \"link\" : \"/aboutme\"\r\n  },\r\n  {\r\n    \"text\" : \"CV\",\r\n    \"link\" : \"/cv\"\r\n  },\r\n  {\r\n    \"text\" : \"About\",\r\n    \"link\" : \"/about\"\r\n  }\r\n];","import React, { Component } from 'react';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Links from './nav';\r\n\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n          <div className='navbar-brand'>\r\n            <Link to=\"/\">\r\n              <img\r\n                alt=\"\"\r\n                src=\"/static/media/bootstrapLogo.svg\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <Nav className=\"mr-auto\" >\r\n          </Nav>\r\n          <Nav navbar>\r\n            {\r\n              Links.map((item, i) => (\r\n                <Link className=\"nav-link\" key={i} to={item.link}>{item.text}</Link>    \r\n              ))\r\n            }\r\n          </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nimport './SocialNetwork.scss';\r\n\r\nclass SocialNetwork extends Component {\r\n\r\n  state = {\r\n    tooltipOpen : false,\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <a\r\n        className=\"social-network-link\"\r\n        href={this.props.link}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <FontAwesomeIcon id={this.props.text} icon={this.props.icon} size={this.props.size} />\r\n        <Tooltip placement=\"top\" target={this.props.text} isOpen={this.state.tooltipOpen} toggle={this.toggle}>\r\n          {this.props.text}\r\n        </Tooltip>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialNetwork;\r\n\r\nSocialNetwork.propTypes = {\r\n  icon : PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  link : PropTypes.string.isRequired,\r\n  size : PropTypes.string.isRequired,\r\n  text : PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport SocialNetwork from '../../components/SocialNetwork';\r\n\r\nimport './Footer.scss';\r\n\r\nclass Footer extends Component {\r\n  state = {\r\n    Networks : [],\r\n  }\r\n\r\n  render() {\r\n    if(this.state.Networks.length===0)\r\n    {\r\n      var request = new XMLHttpRequest();\r\n      request.open('GET','/socials.json',true);\r\n      request.addEventListener('readystatechange', () => {\r\n        if ((request.readyState===4) && (request.status===200)) {\r\n          this.setState({\r\n            Networks : JSON.parse(request.responseText),\r\n          });\r\n        }\r\n      }); \r\n      request.send();\r\n    }\r\n    var year = (new Date()).getFullYear();\r\n    return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <div className=\"links\">\r\n          {\r\n            this.state.Networks.map((item, i) => (\r\n              <SocialNetwork key={i} size={item.size} link={item.link} icon={item.icon} text={item.text}/>\r\n            ))\r\n          }   \r\n        </div>\r\n        <div>\r\n          Â© 2018-{year} Maxim Ermoshyn.\r\n        </div>\r\n      </div>\r\n    </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\nimport './About.scss';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about\">\r\n        <img src=\"/static/media/logo.svg\" className=\"about-logo\" alt=\"logo\" />\r\n        <p className=\"about-text\">\r\n          This beautiful site created using ReactJS and Reactstrap.\r\n        </p>\r\n        <a\r\n          className=\"about-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport {Timeline, TimelineEvent} from 'react-event-timeline';\r\n\r\nimport './Home.scss';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"\" style={{width:\"100%\",height:\"100%\",fontSize:\"80%\"}}>\r\n        <Timeline lineColor=\"#61dafb\" >\r\n          <TimelineEvent \r\n            style={{backgroundColor:\"transparent\"}}\r\n            collapsible\r\n            createdAt=\"1997-01-15 11:55 PM\"\r\n            title=\"Event one\"\r\n            titleStyle={{backgroundColor:\"yellow\", padding:\"10px\"}}\r\n            subtitle=\"Subtitle one\"\r\n            subtitleStyle={{backgroundColor:\"lime\", padding:\"10px\"}}\r\n            icon={<i className=\"material-icons md-18\">textsms</i>}\r\n            iconColor=\"black\"\r\n            bubbleStyle={{backgroundColor:\"gray\",}}\r\n            contentStyle={{backgroundColor:\"red\"}}\r\n          >\r\n            I received the payment for $543. Should be shipping the item within a couple of hours.\r\n          </TimelineEvent>\r\n        </Timeline>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import Header from './Header';\r\nimport Footer from './Footer';\r\nimport AppContent from './AppContent';\r\n\r\nexport default {\r\n  AppContent,\r\n  Header, \r\n  Footer, \r\n};","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport About from '../../about/About';\r\nimport Home from '../../home/Home';\r\n\r\nimport './AppContent.scss';\r\n\r\nclass AppContent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"AppContent\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/aboutme\" component={() => (<div>About me</div>)} />\r\n        <Route path=\"/cv\" component={() => (<div>CV</div>)} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"*\" component={() => (<div> 404 </div>)} />\r\n      </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppContent;\r\n","import React, { Component } from 'react';\nimport Components from './components';\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Components.Header/>\n        <Components.AppContent/>\n        <Components.Footer/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.jsx';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport './bootstrap/bootstrap.scss';\nimport './index.scss';\n\nlibrary.add(fab);\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}